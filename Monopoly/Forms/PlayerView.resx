<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="oPlayerIcon.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAFoAAABaCAIAAAC3ytZVAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wwAADsMBx2+oZAAAABh0RVh0U29mdHdhcmUAcGFpbnQubmV0IDQuMS4xYyqcSwAABDZJREFUeF7tllso
        rVsYhqciJSklLkiUck5KipCklBs3cgg5XFKSYxI5s5XDDReUFDnFBaWcbkSRpJTThSKnlEMoStJc7/rH
        vzS/1p57rxpr2616n6v3+8aYjPn8Y47xW6zEBuoQUIeAOgTUIaAOAXUIqENAHQLqEFCHgDoE1CGgDgF1
        CKhDQB0C6hBQh4A6BNQhoA4BdQioQ0AdAuoQUIeAOgTUIaAOAXUIqENAHQLqEFCHgDoE1CGgDoGWjo+P
        j4uLC7OQXF9f2w6Nj4+b6deYn5+/v783iy9ES0dOTo7FYgkKCjLrHzw9PXl4eGBoenoa5erqKjK+oRr9
        Vx4eHjC/paXFrL8QLR0ZGRlYN1hfXzdbBr29vaqvdIDt7W0VfpGdnR0zfS2/QYeTk1NRUZHZMggPD29o
        aPjUcXt729zcfH5+rkYnJydramqampoODw9VZ2trC3uhpKRkbW1NdTC6uLiIcHl52dbWhjA8PFxVVTU1
        NWWMm4yMjJSXl7e2tv5lYHY1+A066uvrHRwcXl9fVXNpaQnNm5ubTx17e3vIm5ubyLW1tcj9/f3V1dWl
        paXozMzMoAM6OjocHR2//wksy5iDsLKyghwZGWlM+c7g4KCak5qampycnJWVFR0d7eLikp2drfo6aOnI
        zMzEOhCwSvxAVDM9Pb2wsNCejqioqPz8fGOiCbz4+/ubxQ8w31ZHe3u76qelpUEBwtnZGfpqxx0dHSHv
        7+8bU7TQ1eHt7Y2ABxUWFoaA2wQrOzg4sKejrKzM3d19YGDg8fERJZiYmMAodg0+pToAHVsd7+/vqo8f
        XUREBMLx8TH6u7u7yFdXV8gQZEzRQldHaGgoglr0xsZGXV0dti469nSAoaGh4OBgV1dXHCKqg2MiJSUF
        c/C7Ux3kv9XR2dmJg0llT09PDCmwJVVTE10dcXFxKoeEhOTl5bm5uY2NjaH8Bx0KbAcfHx+zMJidncU0
        tecR7OlQD2BhYQH/EZd3T0/P6OioGtVHV0d8fLzKfX19WDeeuSrt6eju7jbGrTgCAwICELBT8KKBgGsF
        005PT5ER7OlQrzlzc3PoFxQUVFZW4mZZXl5WEzTR0oGv9Knj7e0Nx2pFRYUq8U6J5f6sIzY2FhnAhbpK
        i4uLVcfZ2fnzyERpT0dgYCDCycmJl5dXYmIiLlrj0xbsTTVHBy0dUADMwijNZGBbPj8/m8k4+e7u7szC
        AKN4qTcLg5eXFzPZAZvCz8/PLKxW3NnqjtNES8f/CN7TsCNwK+FywXUTExOTm5trjmnwp+oAjY2NSUlJ
        vr6+CQkJXV1dZlePP1jHfwF1CKhDQB0C6hBQh4A6BNQhoA4BdQioQ0AdAuoQUIeAOgTUIaAOAXUIqENA
        HQLqEFCHgDoE1CGgDgF1CKhDQB0C6hBQh4A6BNQhoA4BdQioQ0AdAuoQUIcNVus3jJV9J7Iq8tsAAAAA
        SUVORK5CYII=
</value>
  </data>
</root>